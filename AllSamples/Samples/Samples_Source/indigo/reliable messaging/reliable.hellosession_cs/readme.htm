<html>
	

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 11 (filtered)">
<title>The HelloSession Sample</title>
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:SimSun;
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
	{font-family:"\@SimSun";
	panose-1:2 1 6 0 3 1 1 1 1 1;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0in;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Times New Roman";}
h2
	{margin-right:0in;
	margin-left:0in;
	font-size:18.0pt;
	font-family:"Times New Roman";
	font-weight:bold;}
h3
	{margin-right:0in;
	margin-left:0in;
	font-size:13.5pt;
	font-family:"Times New Roman";
	font-weight:bold;}
p.MsoCommentText, li.MsoCommentText, div.MsoCommentText
	{margin:0in;
	margin-bottom:.0001pt;
	font-size:10.0pt;
	font-family:"Times New Roman";}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:blue;
	text-decoration:underline;}
p
	{margin-right:0in;
	margin-left:0in;
	font-size:12.0pt;
	font-family:"Times New Roman";}
p.MsoCommentSubject, li.MsoCommentSubject, div.MsoCommentSubject
	{margin:0in;
	margin-bottom:.0001pt;
	font-size:10.0pt;
	font-family:"Times New Roman";
	font-weight:bold;}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
	{margin:0in;
	margin-bottom:.0001pt;
	font-size:8.0pt;
	font-family:Tahoma;}
span.msoins0
	{text-decoration:underline;}
span.msodel0
	{color:red;
	text-decoration:line-through;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>

</head>

	

<body lang=EN-US link=blue vlink=blue>

<div class=Section1>

<h2><span style='font-family:Arial'>The HelloSession Sample</span></h2>

<h3><span style='font-family:Arial'>"Indigo" - PDC Drop, October 2003</span></h3>

<h3><span style='font-family:Arial'>Contents</span></h3>

<p><span style='font-family:Arial'>This document contains the following
sections:<br>
&nbsp;&nbsp;&nbsp;<a href="#Overview">Overview</a><br>
&nbsp;&nbsp;&nbsp;<a href="#KeyConcepts">Key Concepts</a><br>
&nbsp;&nbsp;&nbsp;<a href="#Building">Building</a><br>
&nbsp;&nbsp;&nbsp;<a href="#Running">Running</a></span></p>

<h3><span style='font-family:Arial'>Overview</span></h3>

<p><a name="#Overview"></a><span style='font-family:Arial'>The HelloSession
sample is a basic "Longhorn" application consisting of a client, a service, a
service host, and client and host configuration files. It uses 
the "Longhorn" communications subsystem (code-named "Indigo"). The client is a console
application that lets you enter a name and then sends the name to the server at
the given address. The server is a console application that responds to
greeting and parting messages</span></p>

<p><span style='font-family:Arial'>The client allows you to establish a dialog
with the server by providing the server’s port URI. After the dialog is
created, the client allows you to send messages to the server, and the server
echoes the messages back. Eventually, you can close the dialog and quit.</span></p>

<p>&nbsp;</p>

<h3><span style='font-family:Arial'>Key Concepts </span><a name="#KeyConcepts"></a></h3>

<p><b><span style='font-family:Arial'>Client:</span></b><span style='font-family:
Arial'><br>
The client is a simple console application that uses a configuration file to
store settings for the "Indigo" objects that it uses:</span></p>

<p class=MsoNormal><span lang=FR style='font-size:10.0pt;font-family:"Courier New";
color:blue'>&lt;</span><span lang=FR style='font-size:10.0pt;font-family:"Courier New";
color:maroon'>configuration</span><span lang=FR style='font-size:10.0pt;
font-family:"Courier New";color:blue'>&gt;</span></p>

<p class=MsoNormal><span lang=FR style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;
<span style='color:blue'>&lt;</span><span style='color:maroon'>system.messagebus</span><span
style='color:blue'>&gt;</span></span></p>

<p class=MsoNormal><span lang=FR style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;
<span style='color:blue'>&lt;</span><span style='color:maroon'>serviceEnvironments</span><span
style='color:blue'>&gt;</span></span></p>

<p class=MsoNormal><span lang=FR style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>&lt;</span><span style='color:maroon'>serviceEnvironment</span><span
style='color:red'>name</span><span style='color:blue'>=&quot;main&quot;&gt;</span></span></p>

<p class=MsoNormal><span lang=FR style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>&lt;</span><span style='color:maroon'>port</span><span
style='color:blue'>&gt;</span></span></p>

<p class=MsoNormal><span lang=FR style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='font-size:10.0pt;font-family:"Courier New";color:blue'>&lt;</span><span
style='font-size:10.0pt;font-family:"Courier New";color:maroon'>identityRole</span><span
style='font-size:10.0pt;font-family:"Courier New";color:blue'>&gt;</span><span
style='font-size:10.0pt;font-family:"Courier New"'>soap.tcp://localhost:46001/HelloClient/<span
style='color:blue'>&lt;/</span><span style='color:maroon'>identityRole</span><span
style='color:blue'>&gt;</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>&lt;/</span><span style='color:maroon'>port</span><span
style='color:blue'>&gt;</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>&lt;!</span><span style='color:green'>-- CAUTION:
Security disabled for demonstration purposes only. --</span><span
style='color:blue'>&gt;</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>&lt;</span><span style='color:maroon'>remove</span><span
style='color:red'>name</span><span style='color:blue'>=&quot;securityManager&quot;/&gt;</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>&lt;</span><span style='color:maroon'>policyManager</span><span
style='color:blue'>&gt;</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>&lt;!</span><span style='color:green'>-- CAUTION:
Security disabled for demonstration purposes only. --</span><span
style='color:blue'>&gt;</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>&lt;!</span><span style='color:green'>-- Permits
unsigned policy statements. Default requires signed policy statements --</span><span
style='color:blue'>&gt;</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>&lt;</span><span style='color:maroon'>areUntrustedPolicyAttachmentsAccepted</span><span
style='color:blue'>&gt;</span>true<span style='color:blue'>&lt;/</span><span
style='color:maroon'>areUntrustedPolicyAttachmentsAccepted</span><span
style='color:blue'>&gt;</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>&lt;</span><span style='color:maroon'>isPolicyReturned</span><span
style='color:blue'>&gt;</span>true<span style='color:blue'>&lt;/</span><span
style='color:maroon'>isPolicyReturned</span><span style='color:blue'>&gt;</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>&lt;/</span><span style='color:maroon'>policyManager</span><span
style='color:blue'>&gt;</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>&lt;/</span><span style='color:maroon'>serviceEnvironment</span><span
style='color:blue'>&gt;</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;
<span style='color:blue'>&lt;/</span><span style='color:maroon'>serviceEnvironments</span><span
style='color:blue'>&gt;</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;
<span style='color:blue'>&lt;/</span><span style='color:maroon'>system.messagebus</span><span
style='color:blue'>&gt;<br>
&lt;/</span><span style='color:maroon'>configuration</span><span
style='color:blue'>&gt;</span></span></p>

<p><span style='font-family:Arial'>The client application uses the service
manager, and creates a dialog channel given a URI.&nbsp; The client establishes
a connection using the salutation method of the service and then uses the
parting methods before closing the connection. &nbsp;The client expects an
immediate response in this example and returns the result to the console.</span></p>

<h3><span style='font-size:12.0pt;font-family:Arial'>NOTE: The Client class in this
example does not explicitly handle the Done event on the Channel, which is
called when the Channel is finished and ready for disposal.&nbsp; Closing the
channel without waiting for this event can result in client and server
exceptions that the channel is already closed when sending final
messages.&nbsp; This was left out of the example for simplicity but handling
this event is recommended for production quality code.&nbsp; The
BothWayServiceMessageSession example shows the correct handling of the Channel Done
event.</span><span style='font-size:12.0pt;font-family:Arial;font-weight:normal'>&nbsp;
</span></h3>

<h3><span style='font-size:12.0pt;font-family:Arial;font-weight:normal'>C#
Client:</span></h3>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>string</span> name = &quot;Client&quot;;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>if</span> (args.Length &gt; 0)</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
name = args[0];</span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
ServiceEnvironment se = ServiceEnvironment.Load();</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
ServiceManager manager = se[<span style='color:blue'>typeof</span>(ServiceManager)]
<span style='color:blue'>as</span> ServiceManager;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>if</span> (manager == <span style='color:blue'>null</span>)</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>throw</span> <span style='color:blue'>new</span>
ApplicationException(&quot;The ServiceManager is not available in the service
se for some reason.&quot;);</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
se.Open();</span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Uri uri = <span style='color:blue'>new</span>
Uri(&quot;soap.tcp://localhost:46000/HelloService/&quot;);</span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:green'>// Use the ServiceManager to create a channel to the </span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:green'>// Hello service. Because of the definition of
IHelloChannel,</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:green'>// the "Indigo" infrastructure knows that it must
create a</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:green'>// session between this client instance and the
service instance</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:green'>// that is created to respond to this client's
requests. </span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:green'>// Unlike DatagramPortTypeAttribute services, each
subsequent </span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:green'>// request from this client is handled by the same
service object.</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:green'>// When the client or the service is done with the
conversation,</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:green'>// they can call
IDialogPortTypeChannel.DoneSending().</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
IHelloChannel channel;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
channel = (IHelloChannel)manager.CreateChannel(<span style='color:blue'>typeof</span>(IHelloChannel),
uri);</span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>try</span> </span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(channel.Salutation(name));</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(channel.Parting(&quot;Thanks for the good time.&quot;));</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(channel.Parting(&quot;No, really, I must go.&quot;));</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(&quot;Press ENTER to stop this client...&quot;);</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.ReadLine();</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
channel.DoneSending();</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>catch</span>(Exception Ex)</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(Ex);</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>finally</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
se.Close();</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}</span></p>

<h3><span style='font-size:12.0pt;font-family:Arial;font-weight:normal'>VB
Client:</span></h3>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>   <span style='color:blue'>Dim</span> name <span
style='color:blue'>As</span> <span style='color:blue'>String</span> =
&quot;Client&quot;</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>   <span style='color:blue'>If</span> (args.Length
&gt; 0) <span style='color:blue'>Then</span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>       name = args(0)</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>   <span style='color:blue'>End</span> <span
style='color:blue'>If</span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>   <span style='color:green'>' Load the default
service environment, called &quot;main&quot;.</span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>   <span style='color:blue'>Dim</span> se <span
style='color:blue'>As</span> ServiceEnvironment = ServiceEnvironment.Load()</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>   <span style='color:green'>' Retrieve the
ServiceManager from the default environment</span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>   <span style='color:blue'>Dim</span> manager <span
style='color:blue'>As</span> ServiceManager = <span style='color:blue'>CType</span>(se(<span
style='color:blue'>GetType</span>(ServiceManager)), ServiceManager)</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>   <span style='color:blue'>If</span> (manager <span
style='color:blue'>Is</span> <span style='color:blue'>Nothing</span>) <span
style='color:blue'>Then</span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>       <span style='color:blue'>Throw</span> <span
style='color:blue'>New</span> ApplicationException(&quot;The ServiceManager is
not available in the service se for some reason.&quot;)</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>   <span style='color:blue'>End</span> <span
style='color:blue'>If</span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>   <span style='color:green'>' Start the service
environment.</span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>   se.Open()</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>   <span style='color:green'>' Create a proxy
channel that points to the service to call.</span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>   <span style='color:blue'>Dim</span> serverUri <span
style='color:blue'>As</span> <span style='color:blue'>New</span>
Uri(&quot;soap.tcp://localhost:46000/HelloService/&quot;)</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>   <span style='color:green'>'  Use the
ServiceManager to create a channel to the </span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>   <span style='color:green'>'  Hello service.
Because of the definition of IHelloChannel,</span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>   <span style='color:green'>'  the "Indigo"
infrastructure knows that it must create a</span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>   <span style='color:green'>'  session between this
client instance and the service instance</span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>   <span style='color:green'>'  that is created to
respond to this client's requests. </span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>   <span style='color:green'>'  Unlike DatagramPortTypeAttribute
services, each subsequent </span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>   <span style='color:green'>'  request from this
client is handled by the same service object.</span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>   <span style='color:green'>'  When the client or
the service is done with the conversation,</span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>   <span style='color:green'>'  they can call
IDialogPortTypeChannel.DoneSending().</span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>   <span style='color:blue'>Dim</span> channel <span
style='color:blue'>As</span> IHelloChannel = <span style='color:blue'>CType</span>(manager.CreateChannel(<span
style='color:blue'>GetType</span>(IHelloChannel), serverUri), IHelloChannel)</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>   <span style='color:blue'>Try</span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>       Console.WriteLine(channel.Salutation(name))</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>      
Console.WriteLine(channel.Parting(&quot;Thanks for the good time.&quot;))</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>       Console.WriteLine(channel.Parting(&quot;No,
really, I must go.&quot;))</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>       Console.WriteLine(&quot;Press enter to stop
this client...&quot;)</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>       Console.ReadLine()</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>       channel.DoneSending()</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>   <span style='color:blue'>Catch</span> ex <span
style='color:blue'>As</span> Exception</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>       Console.WriteLine(Ex)</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>   <span style='color:blue'>Finally</span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>       se.Close()</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>   <span
style='color:blue'>End</span> <span style='color:blue'>Try</span></span></p>

<p><b><span style='font-family:Arial'>Host:</span></b><span style='font-family:
Arial'><br>
The host application loads loads its configuration from the Host.exe.config
file:</span></p>

<p class=MsoNormal><span lang=FR style='font-size:10.0pt;font-family:"Courier New";
color:blue'>&lt;</span><span lang=FR style='font-size:10.0pt;font-family:"Courier New";
color:maroon'>configuration</span><span lang=FR style='font-size:10.0pt;
font-family:"Courier New";color:blue'>&gt;</span></p>

<p class=MsoNormal><span lang=FR style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;
<span style='color:blue'>&lt;</span><span style='color:maroon'>system.messagebus</span><span
style='color:blue'>&gt;</span></span></p>

<p class=MsoNormal><span lang=FR style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;
<span style='color:blue'>&lt;</span><span style='color:maroon'>serviceEnvironments</span><span
style='color:blue'>&gt;</span></span></p>

<p class=MsoNormal><span lang=FR style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>&lt;</span><span style='color:maroon'>serviceEnvironment</span><span
style='color:red'>name</span><span style='color:blue'>=&quot;main&quot;&gt;</span></span></p>

<p class=MsoNormal><span lang=FR style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>&lt;</span><span style='color:maroon'>port</span><span
style='color:blue'>&gt;</span></span></p>

<p class=MsoNormal><span lang=FR style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='font-size:10.0pt;font-family:"Courier New";color:blue'>&lt;</span><span
style='font-size:10.0pt;font-family:"Courier New";color:maroon'>identityRole</span><span
style='font-size:10.0pt;font-family:"Courier New";color:blue'>&gt;</span><span
style='font-size:10.0pt;font-family:"Courier New"'>soap.tcp://localhost:46000/HelloService/<span
style='color:blue'>&lt;/</span><span style='color:maroon'>identityRole</span><span
style='color:blue'>&gt;</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>&lt;/</span><span style='color:maroon'>port</span><span
style='color:blue'>&gt;</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>&lt;!</span><span style='color:green'>-- CAUTION:
Security disabled for demonstration purposes only. --</span><span
style='color:blue'>&gt;</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>&lt;</span><span style='color:maroon'>remove</span><span
style='color:red'>name</span><span style='color:blue'>=&quot;securityManager&quot;/&gt;</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>&lt;</span><span style='color:maroon'>policyManager</span><span
style='color:blue'>&gt;</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>&lt;!</span><span style='color:green'>-- CAUTION:
Security disabled for demonstration purposes only. --</span><span
style='color:blue'>&gt;</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style='color:blue'>&lt;!</span><span
style='color:green'>-- Permits unsigned policy statements. Default requires
signed policy statements --</span><span style='color:blue'>&gt;</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>&lt;</span><span style='color:maroon'>areUntrustedPolicyAttachmentsAccepted</span><span
style='color:blue'>&gt;</span>true<span style='color:blue'>&lt;/</span><span
style='color:maroon'>areUntrustedPolicyAttachmentsAccepted</span><span
style='color:blue'>&gt;</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>&lt;</span><span style='color:maroon'>isPolicyReturned</span><span
style='color:blue'>&gt;</span>true<span style='color:blue'>&lt;/</span><span
style='color:maroon'>isPolicyReturned</span><span style='color:blue'>&gt;</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>&lt;/</span><span style='color:maroon'>policyManager</span><span
style='color:blue'>&gt;</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>&lt;</span><span style='color:maroon'>serviceManager</span><span
style='color:blue'>&gt;</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>&lt;</span><span style='color:maroon'>activatableServices</span><span
style='color:blue'>&gt;</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>&lt;</span><span style='color:maroon'>add </span><span
style='color:red'>type</span><span style='color:blue'>=&quot;Microsoft.Samples.MessageBus.Quickstarts.Hello,
HelloService&quot;/&gt;</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>&lt;/</span><span style='color:maroon'>activatableServices</span><span
style='color:blue'>&gt;</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>&lt;/</span><span style='color:maroon'>serviceManager</span><span
style='color:blue'>&gt;</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>&lt;/</span><span style='color:maroon'>serviceEnvironment</span><span
style='color:blue'>&gt;</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;
<span style='color:blue'>&lt;/</span><span style='color:maroon'>serviceEnvironments</span><span
style='color:blue'>&gt;</span></span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;
<span style='color:blue'>&lt;/</span><span style='color:maroon'>system.messagebus</span><span
style='color:blue'>&gt;<br>
&lt;/</span><span style='color:maroon'>configuration</span><span
style='color:blue'>&gt;</span></span></p>

<p><span style='font-family:Arial'>The host application simply loads the
service environment and holds the connection open using the <b>Console.ReadLine</b>
method.</span></p>

<h3><span lang=FR style='font-size:12.0pt;font-family:Arial;font-weight:normal'>C#
host:</span></h3>

<p class=MsoNormal><span lang=FR style='font-size:10.0pt;font-family:"Courier New"'>           
ServiceEnvironment environs = ServiceEnvironment.Load();</span></p>

<p class=MsoNormal><span lang=FR style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
environs.Open();</span></p>

<p class=MsoNormal><span lang=FR style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='font-size:10.0pt;font-family:"Courier New"'>Console.WriteLine(&quot;Press
enter to stop the services...&quot;);</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.ReadLine();</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
environs.Close();</span></p>

<h3><span style='font-size:12.0pt;font-family:Arial;font-weight:normal'>VB
host:</span></h3>

<p class=MsoNormal style='text-autospace:none'><span lang=FR style='font-size:
10.0pt;font-family:"Courier New"'>        <span style='color:blue'>Dim</span>
environs <span style='color:blue'>As</span> ServiceEnvironment = ServiceEnvironment.Load()</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>        environs.Open()</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>        Console.WriteLine(&quot;Press enter to stop
the services...&quot;)</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>        Console.ReadLine()</span></p>

<p><span style='font-size:10.0pt;font-family:"Courier New"'>       
environs.Close()</span></p>

<p><b><span style='font-family:Arial'>Service:<br>
</span></b><span style='font-family:Arial'>The HelloService implements the
DialogPortTypeAttribute attribute and all of the methods are marked with
the&nbsp;ServiceMessageAttribute.&nbsp; Each of the service methods returns
directly to the client application:</span></p>

<h3><span style='font-size:12.0pt;font-family:Arial;font-weight:normal'>C#
Service:</span></h3>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:blue'>using</span><span style='font-size:10.0pt;font-family:"Courier New"'>
System;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:blue'>using</span><span style='font-size:10.0pt;font-family:"Courier New"'>
System.MessageBus;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:blue'>using</span><span style='font-size:10.0pt;font-family:"Courier New"'>
System.MessageBus.Services;</span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:green'>// Using the DialogPortTypeAttribute establishes a session between
</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:green'>// an instance of this service class and the client that created
it.</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:green'>// All subsequent communication from or to the client will be </span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:green'>// with the same service instance.</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>[DialogPortTypeAttribute(Name=&quot;Hello&quot;,
Namespace=&quot;http://www.tempuri.org/quickstarts&quot;)]</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:blue'>public</span><span style='font-size:10.0pt;font-family:"Courier New"'>
<span style='color:blue'>class</span> Hello</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>{</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;
<span style='color:blue'>private</span> <span style='color:blue'>string</span>
clientName;</span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;
<span style='color:blue'>public</span> Hello()</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;The service instance {0} has been created.&quot;, </span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>this</span>.GetHashCode()</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
);</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;
</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;
[ServiceMethodAttribute]</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;
<span style='color:blue'>public</span> <span style='color:blue'>string</span>
Salutation(<span style='color:blue'>string</span> name)</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;
{&nbsp;&nbsp;&nbsp; </span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>this</span>.clientName = name;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(&quot;Called by a client with the name {0}&quot;, name);</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>return</span> String.Format(</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;Hello, {0}! This is Hello service instance {1}.&quot;, </span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
name, </span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>this</span>.GetHashCode().ToString()</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
);</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;
[ServiceMethodAttribute]</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;
<span style='color:blue'>public</span> <span style='color:blue'>string</span>
Parting(<span style='color:blue'>string</span> departureString)</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(&quot;{0} is departing.&nbsp; Departure comment is {1}&quot;
,</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
clientName, </span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
departureString</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
);</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>return</span> String.Format(</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;Service instance {0} wishes you goodwill.&quot;, </span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>this</span>.GetHashCode().ToString()</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
);</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;
~Hello()</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;Service instance number {0} is being recycled.&quot;, </span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>this</span>.GetHashCode()</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
);&nbsp;&nbsp;&nbsp; </span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=MsoNormal>&nbsp;<span style='font-size:10.0pt;font-family:"Courier New"'>}</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<h3><span style='font-size:12.0pt;font-family:Arial;font-weight:normal'>VB
Service:</span></h3>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New";color:blue'>Imports</span><span style='font-size:
10.0pt;font-family:"Courier New"'> System</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New";color:blue'>Imports</span><span style='font-size:
10.0pt;font-family:"Courier New"'> System.MessageBus</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New";color:blue'>Imports</span><span style='font-size:
10.0pt;font-family:"Courier New"'> System.MessageBus.Services</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New";color:green'>'  Using the DialogPortTypeAttribute
establishes a session between </span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New";color:green'>'  an instance of this service class and
the client who created it.</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New";color:green'>'  All subsequent communication from or
to the client will be </span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New";color:green'>'  with the same service instance.</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>&lt;DialogPortTypeAttribute(Name:=&quot;Hello&quot;,
<span style='color:blue'>Namespace</span>:=&quot;http://www.tempuri.org/quickstarts&quot;)&gt;
_</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New";color:blue'>Public</span><span style='font-size:10.0pt;
font-family:"Courier New"'> <span style='color:blue'>Class</span> Hello</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>    <span style='color:blue'>Private</span>
clientName <span style='color:blue'>As</span> <span style='color:blue'>String</span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>    <span style='color:blue'>Public</span> <span
style='color:blue'>Sub</span> <span style='color:blue'>New</span>()</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>        Console.WriteLine(&quot;The service instance
{0} has been created.&quot;, <span style='color:blue'>Me</span>.GetHashCode())</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>    <span style='color:blue'>End</span> <span
style='color:blue'>Sub</span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>    <span style='color:blue'>Protected</span> <span
style='color:blue'>Overrides</span> <span style='color:blue'>Sub</span>
Finalize()</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>        Console.WriteLine(&quot;Service instance
number {0} is being recycled.&quot;, <span style='color:blue'>Me</span>.GetHashCode())</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>    <span style='color:blue'>End</span> <span
style='color:blue'>Sub</span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New";color:blue'>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>    <span style='color:green'>' ServiceMethod
attribute exposes methods for access on the service</span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>    &lt;ServiceMethod()&gt; _</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>                        <span style='color:blue'>Public</span>
<span style='color:blue'>Function</span> Parting(<span style='color:blue'>ByVal</span>
departureString <span style='color:blue'>As</span> <span style='color:blue'>String</span>)
<span style='color:blue'>As</span> <span style='color:blue'>String</span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>        Console.WriteLine(&quot;{0} is departing. 
Departure comment is {1}&quot;, clientName, departureString)</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>        <span style='color:blue'>Return</span> <span
style='color:blue'>String</span>.Format(&quot;Service instance {0} wishes you
goodwill.&quot;, <span style='color:blue'>Me</span>.GetHashCode().ToString())</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>    <span style='color:blue'>End</span> <span
style='color:blue'>Function</span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New";color:blue'>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>    &lt;ServiceMethodAttribute()&gt; _</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>    <span style='color:blue'>Public</span> <span
style='color:blue'>Function</span> Salutation(<span style='color:blue'>ByVal</span>
name <span style='color:blue'>As</span> <span style='color:blue'>String</span>)
<span style='color:blue'>As</span> <span style='color:blue'>String</span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>        <span style='color:blue'>Me</span>.clientName
= name</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>        Console.WriteLine(&quot;Called by a client
with the name {0}&quot;, name)</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>        <span style='color:blue'>Return</span> <span
style='color:blue'>String</span>.Format(&quot;Hello, {0}! This is Hello service
instance {1}.&quot;, name, <span style='color:blue'>Me</span>.GetHashCode().ToString())</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>    <span style='color:blue'>End</span> <span
style='color:blue'>Function</span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New";color:blue'>&nbsp;</span></p>

<p class=MsoNormal><span style='font-size:10.0pt;font-family:"Courier New";
color:blue'>End</span><span style='font-size:10.0pt;font-family:"Courier New"'>
<span style='color:blue'>Class</span></span></p>

<h3><span style='font-family:Arial'>Building</span></h3>

<ol start=1 type=1>
 <li class=MsoNormal><a name="#Building"></a><span style='font-family:Arial'>Open
     the <b>Longhorn Build Environment</b> console window (click <b>Start</b>,
     click <b>All Programs</b>, click&nbsp;<b>Microsoft Longhorn SDK</b>, click
     <b>Open Build Environment Window</b>, and click <b>Longhorn Build
     Environment</b>).</span></li>
 <li class=MsoNormal><span style='font-family:Arial'>Navigate to the directory
     where this readme is located.</span></li>
 <li class=MsoNormal><span style='font-family:Arial'>Type <b>MSBuild</b>&nbsp;and
     press ENTER.</span></li>
</ol>

<h3><span style='font-family:Arial'>Running</span></h3>

<p><a name="#Running"></a><b><span style='font-family:Arial'>Running on a
single machine:</span></b><span style='font-family:Arial'><br>
To run the sample on a single machine, open a command prompt window in the
Server directory and another one in the Client directory. At the server command
prompt, type <strong><span style='font-family:Arial'>host</span></strong>,to
start the server application. Then, at the client command prompt, type <strong><span
style='font-family:Arial'>client </span></strong>&lt;<em><span
style='font-family:Arial'>name</span></em> &gt; to start the client
application.</span></p>

<p><b><span style='font-family:Arial'>Running on multiple machines:</span></b><span
style='font-family:Arial'><br>
To run the sample on multiple machines, perform the following steps:</span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in'><span
style='font-family:Arial'>1.</span><span style='font-size:7.0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='font-family:Arial'>On the server machine, edit the
Host.exe.config file in the Server directory. Replace &quot;localhost&quot;
with the server machine name. Then run the server application, Host.exe. </span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in'><span
style='font-family:Arial'>2.</span><span style='font-size:7.0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='font-family:Arial'>On the client machine, edit &nbsp;the
Client.cs (or Client.vb) file in the Client directory. In the URI that
represents the server location, replace &quot;localhost&quot; with the server
machine name. Recompile and run the client application, Client.exe. </span></p>

<p>&nbsp;</p>

</div>

</body>

</html>
