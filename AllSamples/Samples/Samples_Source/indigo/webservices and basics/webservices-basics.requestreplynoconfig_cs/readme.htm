<html>
	

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 11 (filtered)">
<title>The RequestReplyNoConfig Sample</title>
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0in;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Times New Roman";}
h2
	{margin-right:0in;
	margin-left:0in;
	font-size:18.0pt;
	font-family:"Times New Roman";
	font-weight:bold;}
h3
	{margin-right:0in;
	margin-left:0in;
	font-size:13.5pt;
	font-family:"Times New Roman";
	font-weight:bold;}
p.MsoCommentText, li.MsoCommentText, div.MsoCommentText
	{margin:0in;
	margin-bottom:.0001pt;
	font-size:10.0pt;
	font-family:"Times New Roman";}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:blue;
	text-decoration:underline;}
p
	{margin-right:0in;
	margin-left:0in;
	font-size:12.0pt;
	font-family:"Times New Roman";}
p.MsoCommentSubject, li.MsoCommentSubject, div.MsoCommentSubject
	{margin:0in;
	margin-bottom:.0001pt;
	font-size:10.0pt;
	font-family:"Times New Roman";
	font-weight:bold;}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
	{margin:0in;
	margin-bottom:.0001pt;
	font-size:8.0pt;
	font-family:Tahoma;}
p.section1, li.section1, div.section1
	{margin-right:0in;
	margin-left:0in;
	font-size:12.0pt;
	font-family:"Times New Roman";}
span.msoins0
	{text-decoration:underline;}
span.msodel0
	{color:red;
	text-decoration:line-through;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>

</head>

	

<body lang=EN-US link=blue vlink=blue>

<div class=Section1>

<h2><span style='font-family:Arial'>The RequestReplyNoConfig Sample</span></h2>

<h3><span style='font-family:Arial'>“Indigo” - PDC Drop, October 2003</span></h3>

<h3><span style='font-family:Arial'>Contents</span></h3>

<p class=section1><span style='font-family:Arial'>This document contains the
following sections:<br>
&nbsp;&nbsp;&nbsp;<a href="#Overview">Overview</a><br>
&nbsp;&nbsp;&nbsp;<a href="#KeyConcepts">Key Concepts</a><br>
&nbsp;&nbsp;&nbsp;<a href="#Building">Building</a><br>
&nbsp;&nbsp;&nbsp;<a href="#Running">Running</a></span></p>

<h3><a name="#Overview"></a><span style='font-family:Arial'>Overview</span></h3>

<p class=section1><span style='font-family:Arial'>The RequestReplyNoConfig sample
is a basic &quot;Longhorn&quot; communications subsystem (code-named
&quot;Indigo&quot;) application consisting of a client, a service, and a
service host. The client is a console application that lets you enter a name
and sends the name to the server at the given address in the code. The server
is a console application that responds to greetings with a response. Together
the applications and library implement an “Indigo” Web service, host, and
client that are equivalent in style and functionality of a Web service built
with ASP.NET</span></p>

<p class=section1><span style='font-family:Arial'>This example differs from the
RequestReply example in that there is no predefined configuration for the
client or server applications.</span></p>

<h3><span style='font-family:Arial'>Key Concepts</span></h3>

<p class=section1><b><span style='font-family:Arial'>Client:</span></b><span
style='font-family:Arial'><br>
The client uses the service manager to create a proxy that represents a
service, and invokes the method on the proxy. Because this service method is an
RPC-style or request-reply style method, the execution of the client stops
until the call returns. This example shows how the client can control the
configuration at runtime.&nbsp; For details, see &quot;Choosing Between
ServiceMethodAttribute and ServiceMessageAttribute&quot; in the “Indigo”
documentation.</span></p>

<p class=section1><span style='font-family:Arial'>It is important to realize
that although this client sends SOAP 1.2 messages to communicate with the
service, you interact with this service in your client as though it were a
local call and used no custom parameter types.</span></p>

<p class=section1><span style='font-family:Arial'>C# Client:</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>string</span> name = &quot;Client&quot;;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>if</span> (args.Length &gt; 0)</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
name = args[0];</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// Load the default service environment, called &quot;main&quot;.</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
ServiceEnvironment se = ServiceEnvironment.Load();</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// Retrieve the ServiceManager from the default environment</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
ServiceManager manager = se[<span style='color:blue'>typeof</span>(ServiceManager)]
<span style='color:blue'>as</span> ServiceManager;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>if</span> (manager == <span style='color:blue'>null</span>)</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>throw</span> <span style='color:blue'>new</span>
ApplicationException(</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&quot;The ServiceManager is not available in the service se for some
reason.&quot;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
);</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// Start the service environment programmatically.</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span lang=FR style='font-size:10.0pt;font-family:"Courier New"'>Port
port = se[<span style='color:blue'>typeof</span>(Port)] <span style='color:
blue'>as</span> Port;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span lang=FR
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='font-size:10.0pt;font-family:"Courier New"'>port.IdentityRole
= <span style='color:blue'>new</span> Uri(&quot;soap.tcp://localhost:46001/HelloService/&quot;);</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// Allow PolicyManager to accept unsigned policy messages because </span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// client does not have X509 certificates.</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// CAUTION: Security disabled for demonstration purposes.</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
PolicyManager policyManager = se[<span style='color:blue'>typeof</span>(PolicyManager)]
<span style='color:blue'>as</span> PolicyManager;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
policyManager.AreUntrustedPolicyAttachmentsAccepted = <span style='color:blue'>true</span>;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
policyManager.IsPolicyReturned = <span style='color:blue'>true</span>;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// Turn off access control. </span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// CAUTION: Security disabled for demonstration purposes.</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
SecurityManager security = (SecurityManager)se[<span style='color:blue'>typeof</span>(SecurityManager)];</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
security.DefaultReceiverScope.AccessControl.AccessRequirementChoices.Add(<span
style='color:blue'>new</span> AccessRequirementChoice());</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// start the service.</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
se.Open();</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// Create a proxy channel that points to the service to call.</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Uri uri = <span style='color:blue'>new</span>
Uri(&quot;soap.tcp://localhost:46000/HelloService/&quot;);</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
IHelloChannel channel = (IHelloChannel)manager.CreateChannel(<span
style='color:blue'>typeof</span>(IHelloChannel), uri);</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>try</span> </span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(channel.Greeting(name));</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span lang=FR style='font-size:10.0pt;font-family:"Courier New"'>}</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span lang=FR
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>catch</span>(Exception Ex)</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span lang=FR
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span lang=FR
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(Ex);</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span lang=FR
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='font-size:10.0pt;font-family:"Courier New"'>}</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>finally</span></span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
{</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
se.Close();</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
}</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-family:Arial'>VB Client:<br>
</span><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>Dim</span> name <span style='color:blue'>As</span> <span
style='color:blue'>String</span> = &quot;Client&quot;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>If</span> (args.Length &gt; 0) <span style='color:
blue'>Then</span></span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
name = args(0)</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>End</span> <span style='color:blue'>If</span></span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
' Load the default service environment without any settings since there is no
config file</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>Dim</span> se <span style='color:blue'>As</span>
ServiceEnvironment = ServiceEnvironment.Load()</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
' Retrieve the ServiceManager from the default environment</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>Dim</span> manager <span style='color:blue'>As</span>
ServiceManager = <span style='color:blue'>CType</span>(se(<span
style='color:blue'>GetType</span>(ServiceManager)), ServiceManager)</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>If</span> (manager <span style='color:blue'>Is</span> <span
style='color:blue'>Nothing</span>) <span style='color:blue'>Then</span></span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>Throw</span> <span style='color:blue'>New</span>
ApplicationException(&quot;The ServiceManager is not available in the service
se for some reason.&quot;)</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>End</span> <span style='color:blue'>If</span></span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New";color:blue'>&nbsp;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
' Start the service environment programmatically.</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span lang=FR style='font-size:10.0pt;font-family:"Courier New";
color:blue'>Dim</span><span lang=FR style='font-size:10.0pt;font-family:"Courier New"'>
clientPort <span style='color:blue'>As</span> port = <span style='color:blue'>CType</span>(se(<span
style='color:blue'>GetType</span>(Port)), Port)</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
lang=FR style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='font-size:10.0pt;font-family:"Courier New"'>clientPort.IdentityRole
= <span style='color:blue'>New</span> Uri(&quot;soap.tcp://localhost:46001/HelloService/&quot;)</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
' Allow PolicyManager to accept unsigned policy messages because </span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
' client does not have X509 certificates.</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
' CAUTION: Security disabled for demonstration purposes.</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>Dim</span> policy <span style='color:blue'>As</span>
PolicyManager = <span style='color:blue'>CType</span>(se(<span
style='color:blue'>GetType</span>(PolicyManager)), PolicyManager)</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
policy.AreUntrustedPolicyAttachmentsAccepted = <span style='color:blue'>True</span></span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
policy.IsPolicyReturned = <span style='color:blue'>True</span></span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New";color:blue'>&nbsp;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
' Turn off access control. </span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
' CAUTION: Security disabled for demonstration purposes.</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>Dim</span> security <span style='color:blue'>As</span>
SecurityManager = <span style='color:blue'>CType</span>(se(<span
style='color:blue'>GetType</span>(SecurityManager)), SecurityManager)</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
security.DefaultReceiverScope.AccessControl.AccessRequirementChoices.Add(<span
style='color:blue'>New</span> AccessRequirementChoice)</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
security.IsEnabledForReceive = <span style='color:blue'>False</span></span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New";color:blue'>&nbsp;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
' start the service.</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
se.Open()</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
' Create a proxy channel that points to the service to call.</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>Dim</span> serverUri <span style='color:blue'>As</span>
<span style='color:blue'>New</span>
Uri(&quot;soap.tcp://localhost:46000/HelloService/&quot;)</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>Dim</span> serverChannel <span style='color:blue'>As</span>
IHelloChannel = <span style='color:blue'>CType</span>(manager.CreateChannel(<span
style='color:blue'>GetType</span>(IHelloChannel), serverUri), IHelloChannel)</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>Try</span></span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(serverChannel.Greeting(name))</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span lang=FR style='font-size:10.0pt;font-family:"Courier New";
color:blue'>Catch</span><span lang=FR style='font-size:10.0pt;font-family:"Courier New"'>
ex <span style='color:blue'>As</span> Exception</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
lang=FR style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(Ex)</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
lang=FR style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='font-size:10.0pt;font-family:"Courier New";color:blue'>Finally</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
se.Close()</span></p>

<p class=section1><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>End</span> <span style='color:blue'>Try</span></span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'>&nbsp;</p>

<p class=section1><b><span style='font-family:Arial'>Host:</span></b><span
style='font-family:Arial'><br>
The Host application configures the environment runtime and holds open the host
by using the <strong><span style='font-family:Arial'>Console.ReadLine </span></strong><strong><span
style='font-family:Arial;font-weight:normal'>method</span></strong>:</span></p>

<p class=section1><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;</span><span
style='font-family:Arial'>C# host:</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// Load and configure the default ServiceEnvironment.</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span lang=FR style='font-size:10.0pt;font-family:"Courier New"'>ServiceEnvironment
se = ServiceEnvironment.Load();</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span lang=FR
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Port port = se[<span style='color:blue'>typeof</span>(Port)] <span
style='color:blue'>as</span> Port;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span lang=FR
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;</span><span style='font-size:10.0pt;font-family:"Courier New"'>port.IdentityRole
= <span style='color:blue'>new</span>
Uri(&quot;soap.tcp://localhost:46000/HelloService/&quot;);</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// Register the Hello type as
activatable.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
ServiceManager serviceManager = se[<span style='color:blue'>typeof</span>(ServiceManager)]
<span style='color:blue'>as</span> ServiceManager;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
serviceManager.ActivatableServices.Add(<span style='color:blue'>typeof</span>(Hello));</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// Enable the PolicyManager to accept unsigned policy messages</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// because this service does not have X509 certificates.</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// For demonstration purposes only.</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
PolicyManager policyManager = se[<span style='color:blue'>typeof</span>(PolicyManager)]
<span style='color:blue'>as</span> PolicyManager;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
policyManager.AreUntrustedPolicyAttachmentsAccepted = <span style='color:blue'>true</span>;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
policyManager.IsPolicyReturned = <span style='color:blue'>true</span>;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
// Disable security for receiving messages. For demonstration purposes only.</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
SecurityManager security = (SecurityManager)se[<span style='color:blue'>typeof</span>(SecurityManager)];</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
security.IsEnabledForReceive = <span style='color:blue'>false</span>;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
se.Open();</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(&quot;Press enter to stop the services...&quot;);</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.ReadLine();</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
se.Close();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<span style='font-size:10.0pt;font-family:"Courier New"'><br clear=all
style='page-break-before:always'>
</span>

<p class=section1><span style='font-family:Arial'>&nbsp;&nbsp; &nbsp;&nbsp;VB
host:</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span lang=FR style='font-size:10.0pt;font-family:"Courier New";
color:blue'>Dim</span><span lang=FR style='font-size:10.0pt;font-family:"Courier New"'>
se <span style='color:blue'>As</span> ServiceEnvironment =
ServiceEnvironment.Load()</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
lang=FR style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;<span style='color:blue'>Dim</span>&nbsp; ServerPort <span
style='color:blue'>As</span> Port= <span style='color:blue'>CType</span>(se(<span
style='color:blue'>GetType</span>(Port)), Port)</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
lang=FR style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='font-size:10.0pt;font-family:"Courier New"'>ServerPort.IdentityRole
= <span style='color:blue'>New</span>
Uri(&quot;soap.tcp://localhost:46000/HelloService/&quot;)</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
' Register the Hello type as
activatable.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>Dim</span> manager <span style='color:blue'>as</span>
ServiceManager&nbsp; = <span style='color:blue'>CType</span>(se(<span
style='color:blue'>GetType</span>(ServiceManager)),ServiceManager)</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
manager.ActivatableServices.Add(<span style='color:blue'>GetType</span>(Hello))</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
' Enable the PolicyManager to accept unsigned policy messages</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
' because this service does not have X509 certificates.</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
' For demonstration purposes only.</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>Dim</span> policy <span style='color:blue'>As</span>
PolicyManager&nbsp; = <span style='color:blue'>CType</span>(se(<span
style='color:blue'>GetType</span>(PolicyManager)),PolicyManager)</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
policy.AreUntrustedPolicyAttachmentsAccepted = <span style='color:blue'>True</span></span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
policy.IsPolicyReturned = <span style='color:blue'>True</span></span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New";color:blue'>&nbsp;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
' Disable security for receiving messages. For demonstration purposes only.</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<span style='color:blue'>Dim</span> security <span style='color:blue'>as</span>
SecurityManager = <span style='color:blue'>CType</span>(se(<span
style='color:blue'>GetType</span>(SecurityManager)),SecurityManager)</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
security.IsEnabledForReceive = <span style='color:blue'>False</span></span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New";color:blue'>&nbsp;</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
se.Open()</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(&quot;Press enter to stop the services...&quot;)</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt;text-autospace:none'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.ReadLine()</span></p>

<p class=section1 style='margin:0in;margin-bottom:.0001pt'><span
style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
se.Close()</span></p>

<p><strong><span style='font-family:Arial;color:black'>Service:</span></strong><br>
<span style='font-family:Arial'>The service is exactly the same as the
RequestReply example.</span></p>

<h3><span style='font-family:Arial'>Building</span></h3>

<ol style='margin-top:0in' start=1 type=1>
 <li class=MsoNormal><a name="#Building"></a><span style='font-family:Arial'>Open
     the <b>Longhorn Build Environment</b> console window (click <b>Start</b>,
     click <b>All Programs</b>, click&nbsp;<b>Microsoft Longhorn SDK</b>, click
     <b>Open Build Environment Window</b>, and click <b>Longhorn Build
     Environment</b>).</span></li>
 <li class=MsoNormal><span style='font-family:Arial'>Navigate to the directory
     where this readme is located.</span></li>
 <li class=MsoNormal><span style='font-family:Arial'>Type <b>MSBuild</b>&nbsp;and
     press ENTER.</span></li>
</ol>

<h3><a name="#Running"></a><span style='font-family:Arial'>Running</span></h3>

<p class=section1><b><span style='font-family:Arial'>Running on a single
machine:</span></b><span style='font-family:Arial'><br>
To run the sample on a single machine, open a command prompt window in the
Server directory and another one in the Client directory. At the server command
prompt, type <strong><span style='font-family:Arial'>host </span></strong><strong><span
style='font-family:Arial;font-weight:normal'>to start the server application.</span></strong>
Then, at the client command prompt., type <strong><span style='font-family:
Arial'>client </span></strong><b>&lt;<em><span style='font-family:Arial'>name</span></em>
&gt; </b>to start the client application.</span></p>

<p class=section1><b><span style='font-family:Arial'>Running on multiple
machines:</span></b><span style='font-family:Arial'><br>
To run the sample on multiple machines, perform the following steps:</span></p>

<p class=section1 style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;margin-bottom:.0001pt;text-indent:-.25in'><span
style='font-family:Arial'>1.</span><span style='font-size:7.0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='font-family:Arial'>On the server machine, edit the Host.cs
file in the Server directory. Replace &quot;localhost&quot; with the server
machine name. Then compile and run the server application. </span></p>

<p class=section1 style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.5in;margin-bottom:.0001pt;text-indent:-.25in'><span
style='font-family:Arial'>2.</span><span style='font-size:7.0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='font-family:Arial'>On the client machine, edit the Client.cs
file in the Client directory. In the URI that represents the server location,
replace &quot;localhost&quot; with the server machine name. Recompile the
client and rerun the client application. </span></p>

<p class=section1>&nbsp;</p>

</div>

</body>

</html>
