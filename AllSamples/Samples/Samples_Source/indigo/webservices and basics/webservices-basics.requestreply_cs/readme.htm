<html>
	

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 11 (filtered)">
<title>The RequestReply Sample</title>
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0in;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Times New Roman";}
h2
	{margin-right:0in;
	margin-left:0in;
	font-size:18.0pt;
	font-family:"Times New Roman";
	font-weight:bold;}
h3
	{margin-right:0in;
	margin-left:0in;
	font-size:13.5pt;
	font-family:"Times New Roman";
	font-weight:bold;}
p.MsoCommentText, li.MsoCommentText, div.MsoCommentText
	{margin:0in;
	margin-bottom:.0001pt;
	font-size:10.0pt;
	font-family:"Times New Roman";}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:blue;
	text-decoration:underline;}
p
	{margin-right:0in;
	margin-left:0in;
	font-size:12.0pt;
	font-family:"Times New Roman";}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	font-size:10.0pt;
	font-family:"Courier New";}
p.MsoCommentSubject, li.MsoCommentSubject, div.MsoCommentSubject
	{margin:0in;
	margin-bottom:.0001pt;
	font-size:10.0pt;
	font-family:"Times New Roman";
	font-weight:bold;}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
	{margin:0in;
	margin-bottom:.0001pt;
	font-size:8.0pt;
	font-family:Tahoma;}
span.msoins0
	{text-decoration:underline;}
span.msodel0
	{color:red;
	text-decoration:line-through;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>

</head>

	

<body lang=EN-US link=blue vlink=blue>

<div class=Section1>

<h2><span style='font-family:Arial'>The RequestReply Sample</span></h2>

<h3><span style='font-family:Arial'>“Indigo&quot; - PDC Drop, October 2003</span></h3>

<h3><span style='font-family:Arial'>Contents</span></h3>

<p><span style='font-family:Arial'>This document contains the following
sections:<br>
&nbsp;&nbsp;&nbsp;<a href="#Overview">Overview</a><br>
&nbsp;&nbsp;&nbsp;<a href="#KeyConcepts">Key Concepts</a><br>
&nbsp;&nbsp;&nbsp;<a href="#Building">Building</a><br>
&nbsp;&nbsp;&nbsp;<a href="#Running">Running</a></span></p>

<h3><span style='font-family:Arial'>Overview</span></h3>

<p><a name="#Overview"></a><span style='font-family:Arial'>The RequestReply
sample is a basic &quot;Longhorn&quot; communications subsystem (code-named
&quot;Indigo&quot;) application consisting of a client, a service, a service
host, and client and host configuration files. The client is a console
application that lets you enter a name and sends the name to the server at the
address given in the configuration file. The server is a console application
that responds to greetings with a response. Together the applications and
library implement a “Indigo” Web service, host, and client that are equivalent
in style and functionality of a Web service built with ASP.NET</span></p>

<h3><span style='font-family:Arial'>Key Concepts</span></h3>

<p><a name="#KeyConcepts"></a><b><span style='font-family:Arial'>Client:</span></b><span
style='font-family:Arial'><br>
The client is a simple console application that uses a configuration file to
store settings for the “Indigo” objects that it uses.</span></p>

<pre><span style='color:#202080'>&nbsp;&nbsp;&nbsp; </span></pre><pre><span
style='color:#202080'>&lt;configuration&gt;</span></pre><pre><span
style='color:#202080'>&nbsp; &lt;system.messagebus&gt;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp; &lt;serviceEnvironments&gt;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;serviceEnvironment name=&quot;main&quot;&gt;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;port&gt;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;identityRole&gt;soap.tcp://localhost:46001/HelloClient/&lt;/identityRole&gt;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/port&gt;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;!-- WARNING: This sample is not secured to clarify demonstration. --&gt;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;remove name=&quot;securityManager&quot; /&gt;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;policyManager&gt;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;!-- Permits untrusted policy statements. Default requires signed policy statements. --&gt;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;areUntrustedPolicyAttachmentsAccepted&gt;true&lt;/areUntrustedPolicyAttachmentsAccepted&gt;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;isPolicyReturned&gt;true&lt;/isPolicyReturned&gt;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/policyManager&gt;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/serviceEnvironment&gt;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp; &lt;/serviceEnvironments&gt;</span></pre><pre><span
style='color:#202080'>&nbsp; &lt;/system.messagebus&gt;</span></pre><pre><span
style='color:#202080'>&lt;/configuration&gt;</span></pre><pre><span
style='color:#202080'>&nbsp;</span></pre>

<p><span style='font-family:Arial'>The client loads this configuration data, uses
the service manager to create a proxy that represents a service, and invokes
the method on the proxy. Because this service method is an RPC-style or
request-reply style method, the execution of the client stops until the call
returns. For details, see &quot;Choosing Between ServiceMethodAttribute and
ServiceMessageAttribute&quot; in the “Indigo” documentation.</span></p>

<p><span style='font-family:Arial'>It is important to realize that although
this client sends SOAP 1.2 messages to communicate with the service, you
interact with this service in your client as though it were a local call and
used no custom parameter types. </span></p>

<p><span style='font-family:Arial'>C# client:&nbsp;&nbsp; </span></p>

<pre><span style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;// Load the default service environment, called &quot;main&quot;.</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp; ServiceEnvironment se = ServiceEnvironment.Load();</span></pre><pre><span
style='color:#202080'>&nbsp;</span></pre><pre><span style='color:#202080'>&nbsp;&nbsp;&nbsp; // Retrieve the ServiceManager from the default environment</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp; ServiceManager manager = se[typeof(ServiceManager)] as ServiceManager;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp; if (manager == null)</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp; {</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throw new ApplicationException</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot;The service manager is not available in the service se.&quot; </span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp; }</span></pre><pre><span
style='color:#202080'>&nbsp;</span></pre><pre><span style='color:#202080'>&nbsp;&nbsp;&nbsp; // Start the service environment.</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp; se.Open();</span></pre><pre><span
style='color:#202080'>&nbsp;</span></pre><pre><span style='color:#202080'>&nbsp;&nbsp;&nbsp; // Create a proxy channel that points to the service to call.</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp; Uri uri = new Uri(&quot;soap.tcp://localhost:46000/HelloService/&quot;);</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp; IHelloChannel channel = (IHelloChannel)manager.CreateChannel(typeof(IHelloChannel), uri);</span></pre><pre><span
style='color:#202080'>&nbsp;</span></pre><pre><span style='color:#202080'>&nbsp;&nbsp;&nbsp; try </span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;{</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(channel.Greeting(name));</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp; </span><span lang=FR style='color:
#202080'>}</span></pre><pre><span lang=FR style='color:#202080'>&nbsp;&nbsp;&nbsp; catch(Exception Ex)</span></pre><pre><span
lang=FR style='color:#202080'>&nbsp;&nbsp;&nbsp; {</span></pre><pre><span
lang=FR style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(Ex);</span></pre><pre><span
lang=FR style='color:#202080'>&nbsp;&nbsp;&nbsp; </span><span style='color:
#202080'>}</span></pre><pre><span style='color:#202080'>&nbsp;&nbsp;&nbsp; finally</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp; {</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; se.Close();</span></pre><pre>&nbsp;&nbsp;&nbsp; }</pre>

<p class=MsoNormal style='text-autospace:none'><span style='font-family:Arial'>VB
client:<br>
</span><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp; <span
style='color:green'>' Load the default service environment, called
&quot;main&quot;.</span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>&nbsp;&nbsp; <span style='color:blue'>Dim</span> se <span
style='color:blue'>As</span> ServiceEnvironment = ServiceEnvironment.Load()</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>&nbsp;&nbsp; <span style='color:green'>' Retrieve
the ServiceManager from the default environment</span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>&nbsp;&nbsp; <span style='color:blue'>Dim</span>
manager <span style='color:blue'>As</span> ServiceManager = <span
style='color:blue'>CType</span>(se(<span style='color:blue'>GetType</span>(ServiceManager)),
ServiceManager)</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>&nbsp;&nbsp; <span style='color:blue'>If</span>
(manager <span style='color:blue'>Is</span> <span style='color:blue'>Nothing</span>)
<span style='color:blue'>Then</span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:blue'>Throw</span> <span style='color:blue'>New</span>
ApplicationException(&quot;The ServiceManager is not available in the service
se for some reason.&quot;)</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>&nbsp;&nbsp; <span style='color:blue'>End</span> <span
style='color:blue'>If</span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>&nbsp;&nbsp; <span style='color:green'>' Start the
service environment.</span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>&nbsp;&nbsp; se.Open()</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>&nbsp;&nbsp; <span style='color:green'>' Create a
proxy channel that points to the service to call.</span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>&nbsp;&nbsp; <span style='color:blue'>Dim</span>
serverUri <span style='color:blue'>As</span> <span style='color:blue'>New</span>
Uri(&quot;soap.tcp://localhost:46000/HelloService/&quot;)</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>&nbsp;&nbsp; <span style='color:blue'>Dim</span>
channel <span style='color:blue'>As</span> IHelloChannel = <span
style='color:blue'>CType</span>(manager.CreateChannel(<span style='color:blue'>GetType</span>(IHelloChannel),
serverUri), IHelloChannel)</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>&nbsp;&nbsp; <span style='color:blue'>Try</span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(channel.Greeting(name))</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>&nbsp;&nbsp; </span><span lang=FR style='font-size:
10.0pt;font-family:"Courier New";color:blue'>Catch</span><span lang=FR
style='font-size:10.0pt;font-family:"Courier New"'> ex <span style='color:blue'>As</span>
Exception</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=FR style='font-size:
10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(Ex)</span></p>

<p class=MsoNormal style='text-autospace:none'><span lang=FR style='font-size:
10.0pt;font-family:"Courier New"'>&nbsp;&nbsp; </span><span style='font-size:
10.0pt;font-family:"Courier New";color:blue'>Finally</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; se.Close()</span></p>

<p><span style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;&nbsp; <span
style='color:blue'>End</span> <span style='color:blue'>Try</span></span></p>

<p><b><span style='font-family:Arial'>&nbsp;</span></b></p>

<p><b><span style='font-family:Arial'>Host:</span></b><span style='font-family:
Arial'><br>
The host application configures “Indigo” to listen for incoming messages for
the services listed in the <b>&lt;activatableServices&gt;</b> element.</span></p>

<pre><span style='color:#202080'>&nbsp;&nbsp;&nbsp; </span></pre><pre><span
style='color:#202080'>&lt;configuration&gt;</span></pre><pre><span
style='color:#202080'>&nbsp; &lt;system.messagebus&gt;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp; &lt;serviceEnvironments&gt;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;serviceEnvironment name=&quot;main&quot;&gt;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;port&gt;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;identityRole&gt;soap.tcp://localhost:46000/HelloService/&lt;/identityRole&gt;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/port&gt;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;!-- WARNING: This sample is not secured to clarify demonstration. --&gt;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;remove name=&quot;securityManager&quot; /&gt;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;policyManager&gt;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;!-- Permits unsigned policy statements. Default requires signed policy statements. --&gt;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;areUntrustedPolicyAttachmentsAccepted&gt;true&lt;/areUntrustedPolicyAttachmentsAccepted&gt;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;isPolicyReturned&gt;true&lt;/isPolicyReturned&gt;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/policyManager&gt;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;serviceManager&gt;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;activatableServices&gt;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;add type=&quot;Hello, HelloService&quot; /&gt;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/activatableServices&gt;</span></pre><pre><span
style='color:#202080'>&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/serviceManager&gt;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/serviceEnvironment&gt;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp; &lt;/serviceEnvironments&gt;</span></pre><pre><span
style='color:#202080'>&nbsp; &lt;/system.messagebus&gt;</span></pre><pre><span
style='color:#202080'>&lt;/configuration&gt;</span></pre>

<p><span style='font-family:Arial'>The Host application loads the configuration
information but holds open the host by using the <strong><span
style='font-family:Arial'>Console.ReadLine </span></strong><strong><span
style='font-family:Arial;font-weight:normal'>method</span></strong>:</span></p>

<pre><span lang=FR style='font-size:12.0pt;font-family:Arial'>C# host:</span></pre><pre><span
lang=FR style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ServiceEnvironment environs = ServiceEnvironment.Load(); </span></pre><pre><span
lang=FR style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span
style='color:#202080'>environs.Open(); </span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(&quot;Press enter to stop the services...&quot;); </span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span lang=FR
style='color:#202080'>Console.ReadLine(); environs.Close();</span></pre><pre><span
lang=FR style='font-family:Arial'>&nbsp;</span></pre><pre><span lang=FR
style='font-size:12.0pt;font-family:Arial'>VB host:<br clear=all
style='page-break-before:always'>
</span></pre><pre><span lang=FR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:blue'>Dim</span> environs <span style='color:blue'>As</span> ServiceEnvironment = ServiceEnvironment.Load()</span></pre>

<p class=MsoNormal style='text-autospace:none'><span lang=FR style='font-size:
10.0pt;font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='font-size:10.0pt;font-family:"Courier New"'>environs.Open()</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(&quot;Press enter to stop the services...&quot;)</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=FR style='font-size:10.0pt;font-family:"Courier New"'>Console.ReadLine()</span></p>

<pre><span lang=FR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; environs.Close()</span></pre>

<p><strong><span lang=FR style='font-family:Arial;color:black'>Service:</span></strong></p>

<p><span style='font-family:Arial'>The service itself is marked with the <strong><span
style='font-family:Arial'>DatagramPortTypeAttribute</span></strong> and the
methods are marked with the <strong><span style='font-family:Arial'>ServiceMethodAttribute</span></strong>.
Other than this, there is nothing special about the class.</span></p>

<pre><span style='color:#202080'>&nbsp;</span><span style='font-size:12.0pt;
font-family:Arial'>C# service:</span></pre><pre><span style='color:#202080'>&nbsp;&nbsp;&nbsp; using System; </span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;using System.MessageBus; </span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;using System.MessageBus.Services; </span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;</span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;[DatagramPortType(Name=&quot;Hello&quot;,Namespace=&quot;http://www.tempuri.org/quickstarts&quot;)] </span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;public class Hello </span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;{ </span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ServiceMethodAttribute] </span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public string Greeting(string name) </span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ </span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(&quot;Called by a client with the name {0}&quot;, name); </span></pre><pre><span
style='color:#202080'>`&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return String.Format(&quot;Hello, {0}!&quot;, name); </span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} </span></pre><pre><span
style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;}</span></pre><pre>&nbsp;</pre><pre><span
style='color:#202080'>&nbsp;</span><span style='font-size:12.0pt;font-family:
Arial'>VB service:</span><span style='color:#202080'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></pre>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New";color:blue'>Imports</span><span style='font-size:
10.0pt;font-family:"Courier New"'> System</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New";color:blue'>Imports</span><span style='font-size:
10.0pt;font-family:"Courier New"'> System.MessageBus</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New";color:blue'>Imports</span><span style='font-size:
10.0pt;font-family:"Courier New"'> System.MessageBus.Services</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New";color:green'>'DatagramPortType attribute indicates a sessionless
service</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>&lt;DatagramPortType(Name:=&quot;Hello&quot;, <span
style='color:blue'>Namespace</span>:=&quot;http://www.tempuri.org/quickstarts&quot;)&gt;
_</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New";color:blue'>Public</span><span style='font-size:10.0pt;
font-family:"Courier New"'> <span style='color:blue'>Class</span> Hello</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>&nbsp;</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>&nbsp;&nbsp;&nbsp; <span style='color:green'>'
ServiceMethod attribute exposes methods for access on the service</span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>&nbsp;&nbsp;&nbsp; &lt;ServiceMethod()&gt; _</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>&nbsp;&nbsp;&nbsp; <span style='color:blue'>Public</span>
<span style='color:blue'>Function</span> Greeting(<span style='color:blue'>ByVal</span>
name <span style='color:blue'>As</span> <span style='color:blue'>String</span>)
<span style='color:blue'>As</span> <span style='color:blue'>String</span></span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Console.WriteLine(&quot;Called by a client with the name {0}&quot;, name)</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
style='color:blue'>Return</span> <span style='color:blue'>String</span>.Format(&quot;Hello,
{0}!&quot;, name)</span></p>

<p class=MsoNormal style='text-autospace:none'><span style='font-size:10.0pt;
font-family:"Courier New"'>&nbsp;&nbsp;&nbsp; <span style='color:blue'>End</span>
<span style='color:blue'>Function</span></span></p>

<pre><span style='color:blue'>End</span> <span style='color:blue'>Class</span></pre>

<h3><span style='font-family:Arial'>Building</span></h3>

<ol style='margin-top:0in' start=1 type=1>
 <li class=MsoNormal><a name="#Building"></a><span style='font-family:Arial'>Open
     the <b>Longhorn Build Environment</b> console window (click <b>Start</b>,
     click <b>All Programs</b>, click&nbsp;<b>Microsoft Longhorn SDK</b>, click
     <b>Open Build Environment Window</b>, and click <b>Longhorn Build
     Environment</b>).</span></li>
 <li class=MsoNormal><span style='font-family:Arial'>Navigate to the directory
     where this readme is located.</span></li>
 <li class=MsoNormal><span style='font-family:Arial'>Type <b>MSBuild</b>&nbsp;and
     press ENTER.</span></li>
</ol>

<h3><span style='font-family:Arial'>Running</span></h3>

<p><a name="#Running"></a><b><span style='font-family:Arial'>Running on a
single machine:</span></b><span style='font-family:Arial'><br>
To run the sample on a single machine, open a command prompt window in the
Server directory and another one in the Client directory. At the server command
prompt, type <strong><span style='font-family:Arial'>host </span></strong><strong><span
style='font-family:Arial;font-weight:normal'>to start the server application.
Then</span></strong>, at the client command prompt , type <strong><span
style='font-family:Arial'>client</span></strong><strong><span style='font-family:
Arial;font-weight:normal'> </span></strong><b>&lt;<em><span style='font-family:
Arial'>name</span></em>&gt; </b>to start the client application.</span></p>

<p><b><span style='font-family:Arial'>Running on multiple machines:</span></b><span
style='font-family:Arial'><br>
To run the sample on multiple machines, perform the following steps:</span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in'><span
style='font-family:Arial'>1.</span><span style='font-size:7.0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='font-family:Arial'>On the server machine, edit the
Host.exe.config file in the Server directory. Replace &quot;localhost&quot;
with the server machine name throughout the configuration file. Then run the
server application. </span></p>

<p class=MsoNormal style='margin-left:.5in;text-indent:-.5in'><span
style='font-family:Arial'>2.</span><span style='font-size:7.0pt'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style='font-family:Arial'>On the client machine, edit the
Client.cs file in the Client directory. In the URI that represents the server
location, replace &quot;localhost&quot; with the server machine name. Recompile
the client and rerun the client application. </span></p>

<p><span style='font-family:Arial'>&nbsp;</span></p>

</div>

</body>

</html>
