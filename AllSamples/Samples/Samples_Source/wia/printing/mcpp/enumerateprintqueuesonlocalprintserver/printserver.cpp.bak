/*++
    Copyright (C) 2002 - 2003 Microsoft Corporation                                   
    All rights reserved.                                                        
                                                                              
    Module Name:                                                                
        PrintServer.cpp                                                             
                                                                              
    Abstract:
        A sample code showing how to code against
        a Local Print Queue
        
    Revision History:                                                           
--*/

#include "stdafx.h"

#using <mscorlib.dll>

using namespace System;
using namespace System::IO;
using namespace System::Collections;

//
// Referencing the 2 assemblies required for Printing
//
#using "System.Printing.dll"
#using "Microsoft.Printing.JobTicketDeviceCap.dll"

//
// Printing namespaces
//
using namespace System::Printing;
using namespace System::Printing::PrintSubSystem;
using namespace System::Printing::Configuration;
using namespace Microsoft::Printing::JobTicket;

#ifndef  __PRINTSERVERSAMPLE_HPP__
#include "PrintServerSample.hpp"
#endif

using namespace SystemPrintingSample;

void
PrintServerSample::
EnumeratePrintQueuesOnLocalPrintServer(
	void
	)
{
	try
    {
        Console::WriteLine("Sample code for enumerating Print Queues on Remote Print Server\n");

		LocalPrintServer* localPrintServer = new LocalPrintServer();

        PrintQueueCollection* printQueues = localPrintServer->GetPrintQueues();

        IEnumerator* enumerator = printQueues->GetEnumerator();

        for(;enumerator->MoveNext();)
        {
			PrintQueue* printQueue = __try_cast<PrintQueue*>(enumerator->Current);
            String*           name                   = printQueue->Name;
            Port*             port                   = printQueue->QueuePort;
            Driver*           driver                 = printQueue->QueueDriver;
            String*           queueLocation          = printQueue->Location;
            String*           queueComment           = printQueue->Comment;
			String*           shareName              = printQueue->ShareName;
            //
            // Print out the queried values
            //
            Console::WriteLine("PrintQueue: {0} has the following properites:\n"
                               "Port:        {1}\n"
                               "Driver:      {2}\n"
                               "Location:    {3}\n"
                               "Comment:     {4}\n"
							   "Shared as:   {5}\n",
                               name,
                               port->Name,
                               driver->Name,
                               queueLocation,
                               queueComment,
							   shareName);
		}
	}
    catch (PrintSystemException* printException)
    {
		Console::WriteLine(printException->Message);
	}
}
